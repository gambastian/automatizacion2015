/*
* generated by Xtext
*/
grammar InternalJlogDsl;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package org.xtext.jlog.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.jlog.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.jlog.services.JlogDslGrammarAccess;

}

@parser::members {

 	private JlogDslGrammarAccess grammarAccess;
 	
    public InternalJlogDslParser(TokenStream input, JlogDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Jlog";	
   	}
   	
   	@Override
   	protected JlogDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleJlog
entryRuleJlog returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getJlogRule()); }
	 iv_ruleJlog=ruleJlog 
	 { $current=$iv_ruleJlog.current; } 
	 EOF 
;

// Rule Jlog
ruleJlog returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Jlog' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getJlogAccess().getJlogKeyword_0());
    }
(
(
		lv_name_1_0=RULE_STRING
		{
			newLeafNode(lv_name_1_0, grammarAccess.getJlogAccess().getNameSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getJlogRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"STRING");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getJlogAccess().getLeftCurlyBracketKeyword_2());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getJlogAccess().getArquEstimulosArqStimulusParserRuleCall_3_0()); 
	    }
		lv_arquEstimulos_3_0=ruleArqStimulus		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJlogRule());
	        }
       		add(
       			$current, 
       			"arquEstimulos",
        		lv_arquEstimulos_3_0, 
        		"ArqStimulus");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getJlogAccess().getArquEstimulosArqStimulusParserRuleCall_4_0()); 
	    }
		lv_arquEstimulos_4_0=ruleArqStimulus		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getJlogRule());
	        }
       		add(
       			$current, 
       			"arquEstimulos",
        		lv_arquEstimulos_4_0, 
        		"ArqStimulus");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getJlogAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleArqStimulus
entryRuleArqStimulus returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getArqStimulusRule()); }
	 iv_ruleArqStimulus=ruleArqStimulus 
	 { $current=$iv_ruleArqStimulus.current; } 
	 EOF 
;

// Rule ArqStimulus
ruleArqStimulus returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='ArqStimulus{' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getArqStimulusAccess().getArqStimulusKeyword_0());
    }
	otherlv_1='stimulusName' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getArqStimulusAccess().getStimulusNameKeyword_1());
    }
(
(
		lv_stimulusName_2_0=RULE_STRING
		{
			newLeafNode(lv_stimulusName_2_0, grammarAccess.getArqStimulusAccess().getStimulusNameSTRINGTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getArqStimulusRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"stimulusName",
        		lv_stimulusName_2_0, 
        		"STRING");
	    }

)
)	otherlv_3=',' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getArqStimulusAccess().getCommaKeyword_3());
    }
	otherlv_4='minResponseTime' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getArqStimulusAccess().getMinResponseTimeKeyword_4());
    }
(
(
		lv_minResponseTime_5_0=RULE_INT
		{
			newLeafNode(lv_minResponseTime_5_0, grammarAccess.getArqStimulusAccess().getMinResponseTimeINTTerminalRuleCall_5_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getArqStimulusRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"minResponseTime",
        		lv_minResponseTime_5_0, 
        		"INT");
	    }

)
)	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getArqStimulusAccess().getCommaKeyword_6());
    }
	otherlv_7='medResponseTime' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getArqStimulusAccess().getMedResponseTimeKeyword_7());
    }
(
(
		lv_medResponseTime_8_0=RULE_INT
		{
			newLeafNode(lv_medResponseTime_8_0, grammarAccess.getArqStimulusAccess().getMedResponseTimeINTTerminalRuleCall_8_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getArqStimulusRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"medResponseTime",
        		lv_medResponseTime_8_0, 
        		"INT");
	    }

)
)	otherlv_9=',' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getArqStimulusAccess().getCommaKeyword_9());
    }
	otherlv_10='maxResponseTime' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getArqStimulusAccess().getMaxResponseTimeKeyword_10());
    }
(
(
		lv_maxResponseTime_11_0=RULE_INT
		{
			newLeafNode(lv_maxResponseTime_11_0, grammarAccess.getArqStimulusAccess().getMaxResponseTimeINTTerminalRuleCall_11_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getArqStimulusRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"maxResponseTime",
        		lv_maxResponseTime_11_0, 
        		"INT");
	    }

)
)	otherlv_12=',' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getArqStimulusAccess().getCommaKeyword_12());
    }
	otherlv_13='errorPercentage' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getArqStimulusAccess().getErrorPercentageKeyword_13());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getArqStimulusAccess().getErrorPercentageDoubleParserRuleCall_14_0()); 
	    }
		lv_errorPercentage_14_0=ruleDouble		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArqStimulusRule());
	        }
       		set(
       			$current, 
       			"errorPercentage",
        		lv_errorPercentage_14_0, 
        		"Double");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_15=',' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getArqStimulusAccess().getCommaKeyword_15());
    }
	otherlv_16='throughput' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getArqStimulusAccess().getThroughputKeyword_16());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getArqStimulusAccess().getThroughputDoubleParserRuleCall_17_0()); 
	    }
		lv_throughput_17_0=ruleDouble		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArqStimulusRule());
	        }
       		set(
       			$current, 
       			"throughput",
        		lv_throughput_17_0, 
        		"Double");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_18=',' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getArqStimulusAccess().getCommaKeyword_18());
    }
	otherlv_19='threadNumber' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getArqStimulusAccess().getThreadNumberKeyword_19());
    }
(
(
		lv_threadNumber_20_0=RULE_INT
		{
			newLeafNode(lv_threadNumber_20_0, grammarAccess.getArqStimulusAccess().getThreadNumberINTTerminalRuleCall_20_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getArqStimulusRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"threadNumber",
        		lv_threadNumber_20_0, 
        		"INT");
	    }

)
)	otherlv_21=',' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getArqStimulusAccess().getCommaKeyword_21());
    }
	otherlv_22='latencies{' 
    {
    	newLeafNode(otherlv_22, grammarAccess.getArqStimulusAccess().getLatenciesKeyword_22());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getArqStimulusAccess().getLatenciesValuesParserRuleCall_23_0()); 
	    }
		lv_latencies_23_0=ruleValues		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArqStimulusRule());
	        }
       		add(
       			$current, 
       			"latencies",
        		lv_latencies_23_0, 
        		"Values");
	        afterParserOrEnumRuleCall();
	    }

)
)?(	otherlv_24='|' 
    {
    	newLeafNode(otherlv_24, grammarAccess.getArqStimulusAccess().getVerticalLineKeyword_24_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getArqStimulusAccess().getLatenciesValuesParserRuleCall_24_1_0()); 
	    }
		lv_latencies_25_0=ruleValues		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArqStimulusRule());
	        }
       		add(
       			$current, 
       			"latencies",
        		lv_latencies_25_0, 
        		"Values");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_26='}' 
    {
    	newLeafNode(otherlv_26, grammarAccess.getArqStimulusAccess().getRightCurlyBracketKeyword_25());
    }
	otherlv_27=',' 
    {
    	newLeafNode(otherlv_27, grammarAccess.getArqStimulusAccess().getCommaKeyword_26());
    }
	otherlv_28='responses{' 
    {
    	newLeafNode(otherlv_28, grammarAccess.getArqStimulusAccess().getResponsesKeyword_27());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getArqStimulusAccess().getResponsesValuesParserRuleCall_28_0()); 
	    }
		lv_responses_29_0=ruleValues		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArqStimulusRule());
	        }
       		add(
       			$current, 
       			"responses",
        		lv_responses_29_0, 
        		"Values");
	        afterParserOrEnumRuleCall();
	    }

)
)?(	otherlv_30='|' 
    {
    	newLeafNode(otherlv_30, grammarAccess.getArqStimulusAccess().getVerticalLineKeyword_29_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getArqStimulusAccess().getResponsesValuesParserRuleCall_29_1_0()); 
	    }
		lv_responses_31_0=ruleValues		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArqStimulusRule());
	        }
       		add(
       			$current, 
       			"responses",
        		lv_responses_31_0, 
        		"Values");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_32='}' 
    {
    	newLeafNode(otherlv_32, grammarAccess.getArqStimulusAccess().getRightCurlyBracketKeyword_30());
    }
	otherlv_33='}' 
    {
    	newLeafNode(otherlv_33, grammarAccess.getArqStimulusAccess().getRightCurlyBracketKeyword_31());
    }
)
;





// Entry rule entryRuleValues
entryRuleValues returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getValuesRule()); }
	 iv_ruleValues=ruleValues 
	 { $current=$iv_ruleValues.current; } 
	 EOF 
;

// Rule Values
ruleValues returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_key_0_0=RULE_STRING
		{
			newLeafNode(lv_key_0_0, grammarAccess.getValuesAccess().getKeySTRINGTerminalRuleCall_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getValuesRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"key",
        		lv_key_0_0, 
        		"STRING");
	    }

)
)	otherlv_1=':' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getValuesAccess().getColonKeyword_1());
    }
(
(
		lv_value_2_0=RULE_INT
		{
			newLeafNode(lv_value_2_0, grammarAccess.getValuesAccess().getValueINTTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getValuesRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_2_0, 
        		"INT");
	    }

)
))
;





// Entry rule entryRuleDouble
entryRuleDouble returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDoubleRule()); }
	 iv_ruleDouble=ruleDouble 
	 { $current=$iv_ruleDouble.current; } 
	 EOF 
;

// Rule Double
ruleDouble returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(this_INT_0=RULE_INT
    { 
    newLeafNode(this_INT_0, grammarAccess.getDoubleAccess().getINTTerminalRuleCall_0()); 
    }
	otherlv_1='.' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDoubleAccess().getFullStopKeyword_1());
    }
this_INT_2=RULE_INT
    { 
    newLeafNode(this_INT_2, grammarAccess.getDoubleAccess().getINTTerminalRuleCall_2()); 
    }
)
;





RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


