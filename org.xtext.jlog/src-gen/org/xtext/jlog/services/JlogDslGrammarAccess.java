/*
* generated by Xtext
*/
package org.xtext.jlog.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import java.util.List;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class JlogDslGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class JlogElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Jlog");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cJlogKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameSTRINGTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cArquEstimulosAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cArquEstimulosArqStimulusParserRuleCall_3_0 = (RuleCall)cArquEstimulosAssignment_3.eContents().get(0);
		private final Assignment cArquEstimulosAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cArquEstimulosArqStimulusParserRuleCall_4_0 = (RuleCall)cArquEstimulosAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Jlog:
		//	"Jlog" name=STRING "{" arquEstimulos+=ArqStimulus arquEstimulos+=ArqStimulus* "}";
		public ParserRule getRule() { return rule; }

		//"Jlog" name=STRING "{" arquEstimulos+=ArqStimulus arquEstimulos+=ArqStimulus* "}"
		public Group getGroup() { return cGroup; }

		//"Jlog"
		public Keyword getJlogKeyword_0() { return cJlogKeyword_0; }

		//name=STRING
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_1_0() { return cNameSTRINGTerminalRuleCall_1_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//arquEstimulos+=ArqStimulus
		public Assignment getArquEstimulosAssignment_3() { return cArquEstimulosAssignment_3; }

		//ArqStimulus
		public RuleCall getArquEstimulosArqStimulusParserRuleCall_3_0() { return cArquEstimulosArqStimulusParserRuleCall_3_0; }

		//arquEstimulos+=ArqStimulus*
		public Assignment getArquEstimulosAssignment_4() { return cArquEstimulosAssignment_4; }

		//ArqStimulus
		public RuleCall getArquEstimulosArqStimulusParserRuleCall_4_0() { return cArquEstimulosArqStimulusParserRuleCall_4_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}

	public class ArqStimulusElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ArqStimulus");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cArqStimulusKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cStimulusNameKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cStimulusNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cStimulusNameSTRINGTerminalRuleCall_2_0 = (RuleCall)cStimulusNameAssignment_2.eContents().get(0);
		private final Keyword cCommaKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cMinResponseTimeKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cMinResponseTimeAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cMinResponseTimeINTTerminalRuleCall_5_0 = (RuleCall)cMinResponseTimeAssignment_5.eContents().get(0);
		private final Keyword cCommaKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cMedResponseTimeKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cMedResponseTimeAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cMedResponseTimeINTTerminalRuleCall_8_0 = (RuleCall)cMedResponseTimeAssignment_8.eContents().get(0);
		private final Keyword cCommaKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Keyword cMaxResponseTimeKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Assignment cMaxResponseTimeAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cMaxResponseTimeINTTerminalRuleCall_11_0 = (RuleCall)cMaxResponseTimeAssignment_11.eContents().get(0);
		private final Keyword cCommaKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Keyword cErrorPercentageKeyword_13 = (Keyword)cGroup.eContents().get(13);
		private final Assignment cErrorPercentageAssignment_14 = (Assignment)cGroup.eContents().get(14);
		private final RuleCall cErrorPercentageDoubleParserRuleCall_14_0 = (RuleCall)cErrorPercentageAssignment_14.eContents().get(0);
		private final Keyword cCommaKeyword_15 = (Keyword)cGroup.eContents().get(15);
		private final Keyword cThroughputKeyword_16 = (Keyword)cGroup.eContents().get(16);
		private final Assignment cThroughputAssignment_17 = (Assignment)cGroup.eContents().get(17);
		private final RuleCall cThroughputDoubleParserRuleCall_17_0 = (RuleCall)cThroughputAssignment_17.eContents().get(0);
		private final Keyword cCommaKeyword_18 = (Keyword)cGroup.eContents().get(18);
		private final Keyword cThreadNumberKeyword_19 = (Keyword)cGroup.eContents().get(19);
		private final Assignment cThreadNumberAssignment_20 = (Assignment)cGroup.eContents().get(20);
		private final RuleCall cThreadNumberINTTerminalRuleCall_20_0 = (RuleCall)cThreadNumberAssignment_20.eContents().get(0);
		private final Keyword cCommaKeyword_21 = (Keyword)cGroup.eContents().get(21);
		private final Keyword cLatenciesKeyword_22 = (Keyword)cGroup.eContents().get(22);
		private final Assignment cLatenciesAssignment_23 = (Assignment)cGroup.eContents().get(23);
		private final RuleCall cLatenciesValuesParserRuleCall_23_0 = (RuleCall)cLatenciesAssignment_23.eContents().get(0);
		private final Group cGroup_24 = (Group)cGroup.eContents().get(24);
		private final Keyword cVerticalLineKeyword_24_0 = (Keyword)cGroup_24.eContents().get(0);
		private final Assignment cLatenciesAssignment_24_1 = (Assignment)cGroup_24.eContents().get(1);
		private final RuleCall cLatenciesValuesParserRuleCall_24_1_0 = (RuleCall)cLatenciesAssignment_24_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_25 = (Keyword)cGroup.eContents().get(25);
		private final Keyword cCommaKeyword_26 = (Keyword)cGroup.eContents().get(26);
		private final Keyword cResponsesKeyword_27 = (Keyword)cGroup.eContents().get(27);
		private final Assignment cResponsesAssignment_28 = (Assignment)cGroup.eContents().get(28);
		private final RuleCall cResponsesValuesParserRuleCall_28_0 = (RuleCall)cResponsesAssignment_28.eContents().get(0);
		private final Group cGroup_29 = (Group)cGroup.eContents().get(29);
		private final Keyword cVerticalLineKeyword_29_0 = (Keyword)cGroup_29.eContents().get(0);
		private final Assignment cResponsesAssignment_29_1 = (Assignment)cGroup_29.eContents().get(1);
		private final RuleCall cResponsesValuesParserRuleCall_29_1_0 = (RuleCall)cResponsesAssignment_29_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_30 = (Keyword)cGroup.eContents().get(30);
		private final Keyword cRightCurlyBracketKeyword_31 = (Keyword)cGroup.eContents().get(31);
		
		//ArqStimulus:
		//	"ArqStimulus{" "stimulusName" stimulusName=STRING "," "minResponseTime" minResponseTime=INT "," "medResponseTime"
		//	medResponseTime=INT "," "maxResponseTime" maxResponseTime=INT "," "errorPercentage" errorPercentage=Double ","
		//	"throughput" throughput=Double "," "threadNumber" threadNumber=INT "," "latencies{" latencies+=Values? ("|"
		//	latencies+=Values)* "}" "," "responses{" responses+=Values? ("|" responses+=Values)* "}" "}";
		public ParserRule getRule() { return rule; }

		//"ArqStimulus{" "stimulusName" stimulusName=STRING "," "minResponseTime" minResponseTime=INT "," "medResponseTime"
		//medResponseTime=INT "," "maxResponseTime" maxResponseTime=INT "," "errorPercentage" errorPercentage=Double ","
		//"throughput" throughput=Double "," "threadNumber" threadNumber=INT "," "latencies{" latencies+=Values? ("|"
		//latencies+=Values)* "}" "," "responses{" responses+=Values? ("|" responses+=Values)* "}" "}"
		public Group getGroup() { return cGroup; }

		//"ArqStimulus{"
		public Keyword getArqStimulusKeyword_0() { return cArqStimulusKeyword_0; }

		//"stimulusName"
		public Keyword getStimulusNameKeyword_1() { return cStimulusNameKeyword_1; }

		//stimulusName=STRING
		public Assignment getStimulusNameAssignment_2() { return cStimulusNameAssignment_2; }

		//STRING
		public RuleCall getStimulusNameSTRINGTerminalRuleCall_2_0() { return cStimulusNameSTRINGTerminalRuleCall_2_0; }

		//","
		public Keyword getCommaKeyword_3() { return cCommaKeyword_3; }

		//"minResponseTime"
		public Keyword getMinResponseTimeKeyword_4() { return cMinResponseTimeKeyword_4; }

		//minResponseTime=INT
		public Assignment getMinResponseTimeAssignment_5() { return cMinResponseTimeAssignment_5; }

		//INT
		public RuleCall getMinResponseTimeINTTerminalRuleCall_5_0() { return cMinResponseTimeINTTerminalRuleCall_5_0; }

		//","
		public Keyword getCommaKeyword_6() { return cCommaKeyword_6; }

		//"medResponseTime"
		public Keyword getMedResponseTimeKeyword_7() { return cMedResponseTimeKeyword_7; }

		//medResponseTime=INT
		public Assignment getMedResponseTimeAssignment_8() { return cMedResponseTimeAssignment_8; }

		//INT
		public RuleCall getMedResponseTimeINTTerminalRuleCall_8_0() { return cMedResponseTimeINTTerminalRuleCall_8_0; }

		//","
		public Keyword getCommaKeyword_9() { return cCommaKeyword_9; }

		//"maxResponseTime"
		public Keyword getMaxResponseTimeKeyword_10() { return cMaxResponseTimeKeyword_10; }

		//maxResponseTime=INT
		public Assignment getMaxResponseTimeAssignment_11() { return cMaxResponseTimeAssignment_11; }

		//INT
		public RuleCall getMaxResponseTimeINTTerminalRuleCall_11_0() { return cMaxResponseTimeINTTerminalRuleCall_11_0; }

		//","
		public Keyword getCommaKeyword_12() { return cCommaKeyword_12; }

		//"errorPercentage"
		public Keyword getErrorPercentageKeyword_13() { return cErrorPercentageKeyword_13; }

		//errorPercentage=Double
		public Assignment getErrorPercentageAssignment_14() { return cErrorPercentageAssignment_14; }

		//Double
		public RuleCall getErrorPercentageDoubleParserRuleCall_14_0() { return cErrorPercentageDoubleParserRuleCall_14_0; }

		//","
		public Keyword getCommaKeyword_15() { return cCommaKeyword_15; }

		//"throughput"
		public Keyword getThroughputKeyword_16() { return cThroughputKeyword_16; }

		//throughput=Double
		public Assignment getThroughputAssignment_17() { return cThroughputAssignment_17; }

		//Double
		public RuleCall getThroughputDoubleParserRuleCall_17_0() { return cThroughputDoubleParserRuleCall_17_0; }

		//","
		public Keyword getCommaKeyword_18() { return cCommaKeyword_18; }

		//"threadNumber"
		public Keyword getThreadNumberKeyword_19() { return cThreadNumberKeyword_19; }

		//threadNumber=INT
		public Assignment getThreadNumberAssignment_20() { return cThreadNumberAssignment_20; }

		//INT
		public RuleCall getThreadNumberINTTerminalRuleCall_20_0() { return cThreadNumberINTTerminalRuleCall_20_0; }

		//","
		public Keyword getCommaKeyword_21() { return cCommaKeyword_21; }

		//"latencies{"
		public Keyword getLatenciesKeyword_22() { return cLatenciesKeyword_22; }

		//latencies+=Values?
		public Assignment getLatenciesAssignment_23() { return cLatenciesAssignment_23; }

		//Values
		public RuleCall getLatenciesValuesParserRuleCall_23_0() { return cLatenciesValuesParserRuleCall_23_0; }

		//("|" latencies+=Values)*
		public Group getGroup_24() { return cGroup_24; }

		//"|"
		public Keyword getVerticalLineKeyword_24_0() { return cVerticalLineKeyword_24_0; }

		//latencies+=Values
		public Assignment getLatenciesAssignment_24_1() { return cLatenciesAssignment_24_1; }

		//Values
		public RuleCall getLatenciesValuesParserRuleCall_24_1_0() { return cLatenciesValuesParserRuleCall_24_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_25() { return cRightCurlyBracketKeyword_25; }

		//","
		public Keyword getCommaKeyword_26() { return cCommaKeyword_26; }

		//"responses{"
		public Keyword getResponsesKeyword_27() { return cResponsesKeyword_27; }

		//responses+=Values?
		public Assignment getResponsesAssignment_28() { return cResponsesAssignment_28; }

		//Values
		public RuleCall getResponsesValuesParserRuleCall_28_0() { return cResponsesValuesParserRuleCall_28_0; }

		//("|" responses+=Values)*
		public Group getGroup_29() { return cGroup_29; }

		//"|"
		public Keyword getVerticalLineKeyword_29_0() { return cVerticalLineKeyword_29_0; }

		//responses+=Values
		public Assignment getResponsesAssignment_29_1() { return cResponsesAssignment_29_1; }

		//Values
		public RuleCall getResponsesValuesParserRuleCall_29_1_0() { return cResponsesValuesParserRuleCall_29_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_30() { return cRightCurlyBracketKeyword_30; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_31() { return cRightCurlyBracketKeyword_31; }
	}

	public class ValuesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Values");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cKeyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cKeySTRINGTerminalRuleCall_0_0 = (RuleCall)cKeyAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueINTTerminalRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		
		//Values:
		//	key=STRING ":" value=INT;
		public ParserRule getRule() { return rule; }

		//key=STRING ":" value=INT
		public Group getGroup() { return cGroup; }

		//key=STRING
		public Assignment getKeyAssignment_0() { return cKeyAssignment_0; }

		//STRING
		public RuleCall getKeySTRINGTerminalRuleCall_0_0() { return cKeySTRINGTerminalRuleCall_0_0; }

		//":"
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }

		//value=INT
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }

		//INT
		public RuleCall getValueINTTerminalRuleCall_2_0() { return cValueINTTerminalRuleCall_2_0; }
	}

	public class DoubleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Double");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cINTTerminalRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cFullStopKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cINTTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		
		//Double:
		//	INT "." INT;
		public ParserRule getRule() { return rule; }

		//INT "." INT
		public Group getGroup() { return cGroup; }

		//INT
		public RuleCall getINTTerminalRuleCall_0() { return cINTTerminalRuleCall_0; }

		//"."
		public Keyword getFullStopKeyword_1() { return cFullStopKeyword_1; }

		//INT
		public RuleCall getINTTerminalRuleCall_2() { return cINTTerminalRuleCall_2; }
	}
	
	
	private final JlogElements pJlog;
	private final ArqStimulusElements pArqStimulus;
	private final ValuesElements pValues;
	private final DoubleElements pDouble;
	
	private final Grammar grammar;

	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public JlogDslGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pJlog = new JlogElements();
		this.pArqStimulus = new ArqStimulusElements();
		this.pValues = new ValuesElements();
		this.pDouble = new DoubleElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.xtext.jlog.JlogDsl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	
	public Grammar getGrammar() {
		return grammar;
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Jlog:
	//	"Jlog" name=STRING "{" arquEstimulos+=ArqStimulus arquEstimulos+=ArqStimulus* "}";
	public JlogElements getJlogAccess() {
		return pJlog;
	}
	
	public ParserRule getJlogRule() {
		return getJlogAccess().getRule();
	}

	//ArqStimulus:
	//	"ArqStimulus{" "stimulusName" stimulusName=STRING "," "minResponseTime" minResponseTime=INT "," "medResponseTime"
	//	medResponseTime=INT "," "maxResponseTime" maxResponseTime=INT "," "errorPercentage" errorPercentage=Double ","
	//	"throughput" throughput=Double "," "threadNumber" threadNumber=INT "," "latencies{" latencies+=Values? ("|"
	//	latencies+=Values)* "}" "," "responses{" responses+=Values? ("|" responses+=Values)* "}" "}";
	public ArqStimulusElements getArqStimulusAccess() {
		return pArqStimulus;
	}
	
	public ParserRule getArqStimulusRule() {
		return getArqStimulusAccess().getRule();
	}

	//Values:
	//	key=STRING ":" value=INT;
	public ValuesElements getValuesAccess() {
		return pValues;
	}
	
	public ParserRule getValuesRule() {
		return getValuesAccess().getRule();
	}

	//Double:
	//	INT "." INT;
	public DoubleElements getDoubleAccess() {
		return pDouble;
	}
	
	public ParserRule getDoubleRule() {
		return getDoubleAccess().getRule();
	}

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" . / * 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' * / | !("\\" | "\""))* "\"" | "\'" ("\\" .
	//	/ * 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' * / | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
