/*
* generated by Xtext
*/
package org.xtext.jlog.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import org.xtext.jlog.services.JlogDslGrammarAccess;

public class JlogDslParser extends AbstractContentAssistParser {
	
	@Inject
	private JlogDslGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected org.xtext.jlog.ui.contentassist.antlr.internal.InternalJlogDslParser createParser() {
		org.xtext.jlog.ui.contentassist.antlr.internal.InternalJlogDslParser result = new org.xtext.jlog.ui.contentassist.antlr.internal.InternalJlogDslParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getJlogAccess().getGroup(), "rule__Jlog__Group__0");
					put(grammarAccess.getArqStimulusAccess().getGroup(), "rule__ArqStimulus__Group__0");
					put(grammarAccess.getArqStimulusAccess().getGroup_24(), "rule__ArqStimulus__Group_24__0");
					put(grammarAccess.getArqStimulusAccess().getGroup_29(), "rule__ArqStimulus__Group_29__0");
					put(grammarAccess.getValuesAccess().getGroup(), "rule__Values__Group__0");
					put(grammarAccess.getDoubleAccess().getGroup(), "rule__Double__Group__0");
					put(grammarAccess.getJlogAccess().getNameAssignment_1(), "rule__Jlog__NameAssignment_1");
					put(grammarAccess.getJlogAccess().getArquEstimulosAssignment_3(), "rule__Jlog__ArquEstimulosAssignment_3");
					put(grammarAccess.getJlogAccess().getArquEstimulosAssignment_4(), "rule__Jlog__ArquEstimulosAssignment_4");
					put(grammarAccess.getArqStimulusAccess().getStimulusNameAssignment_2(), "rule__ArqStimulus__StimulusNameAssignment_2");
					put(grammarAccess.getArqStimulusAccess().getMinResponseTimeAssignment_5(), "rule__ArqStimulus__MinResponseTimeAssignment_5");
					put(grammarAccess.getArqStimulusAccess().getMedResponseTimeAssignment_8(), "rule__ArqStimulus__MedResponseTimeAssignment_8");
					put(grammarAccess.getArqStimulusAccess().getMaxResponseTimeAssignment_11(), "rule__ArqStimulus__MaxResponseTimeAssignment_11");
					put(grammarAccess.getArqStimulusAccess().getErrorPercentageAssignment_14(), "rule__ArqStimulus__ErrorPercentageAssignment_14");
					put(grammarAccess.getArqStimulusAccess().getThroughputAssignment_17(), "rule__ArqStimulus__ThroughputAssignment_17");
					put(grammarAccess.getArqStimulusAccess().getThreadNumberAssignment_20(), "rule__ArqStimulus__ThreadNumberAssignment_20");
					put(grammarAccess.getArqStimulusAccess().getLatenciesAssignment_23(), "rule__ArqStimulus__LatenciesAssignment_23");
					put(grammarAccess.getArqStimulusAccess().getLatenciesAssignment_24_1(), "rule__ArqStimulus__LatenciesAssignment_24_1");
					put(grammarAccess.getArqStimulusAccess().getResponsesAssignment_28(), "rule__ArqStimulus__ResponsesAssignment_28");
					put(grammarAccess.getArqStimulusAccess().getResponsesAssignment_29_1(), "rule__ArqStimulus__ResponsesAssignment_29_1");
					put(grammarAccess.getValuesAccess().getKeyAssignment_0(), "rule__Values__KeyAssignment_0");
					put(grammarAccess.getValuesAccess().getValueAssignment_2(), "rule__Values__ValueAssignment_2");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			org.xtext.jlog.ui.contentassist.antlr.internal.InternalJlogDslParser typedParser = (org.xtext.jlog.ui.contentassist.antlr.internal.InternalJlogDslParser) parser;
			typedParser.entryRuleJlog();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public JlogDslGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(JlogDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
